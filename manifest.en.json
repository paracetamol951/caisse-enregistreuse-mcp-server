{
  "name": "Caisse Enregistreuse MCP Server",
  "version": "1.2.0",
  "description": "Exposes caisse.enregistreuse.fr API as MCP tools, enabling programmatic access to authentication, sales creation, and data listing features for shops.",
  "endpoints": [
    {
      "type": "http",
      "url": "https://mcp.enregistreuse.fr/mcp",
      "supports_streaming": true
    }
  ],
  "auth": {
    "type": "api_key",
    "fields": {
      "api_key": {
        "name": "API key",
        "in": "header",
        "key": "Authorization",
        "prefix": "Bearer "
      },
      "shop_id": {
        "name": "Shop ID",
        "in": "header",
        "key": "X-Shop-Id"
      }
    }
  },
  "capabilities": {
    "tools": true,
    "resources": false,
    "prompts": false
  },
  "tools": [
    {
      "name": "ping",
      "description": "Simple MCP server health check. Returns { result: 'OK' } if the server is alive."
    },
    {
      "name": "auth_get_token",
      "description": "Authenticate a user by login and password to obtain the APIKEY and SHOPID required for all other requests. Returns { result: 'OK', APIKEY, SHOPID } on success, or { result: 'ERROR', message } on failure.",
      "input_schema": {
        "type": "object",
        "required": [
          "login",
          "password"
        ],
        "properties": {
          "login": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      }
    },
    {
      "name": "sales_create",
      "description": "Create a new sale in the connected shop. Supports both catalog items and free items. Input includes paymentMode, and items[]. Each item can be of type 'catalog' (with productId) or 'free' (with title and price). Returns a sale confirmation JSON from the API."
    },
    {
      "name": "data_list_articles",
      "description": "Retrieve the list of articles (products) configured in the shop. Returns an array of products with fields like id, title, price, and departmentId. Optional parameter 'format' allows output as json, csv, or html."
    },
    {
      "name": "data_list_departments",
      "description": "Get all departments (product categories) defined in the shop, including their names and default tax rates. Supports format=json|csv|html."
    },
    {
      "name": "data_list_department_groups",
      "description": "Return the list of department groups, used to organize product categories. Each group may include multiple department IDs."
    },
    {
      "name": "data_list_clients",
      "description": "Get the list of clients registered in the shop, including contact info, loyalty points."
    },
    {
      "name": "data_list_declinaisons",
      "description": "Retrieve product variations (declinaisons) such as size or color. Returns an array of variant definitions with value and optional price delta."
    },
    {
      "name": "data_list_deliveries",
      "description": "List all delivery methods available for the shop, such as in-store pickup, home delivery, or courier services."
    },
    {
      "name": "data_list_payments",
      "description": "Return the list of payment methods (e.g. cash, card, mobile payment) available for this shop."
    },
    {
      "name": "data_list_cashboxes",
      "description": "List the registered cashboxes (physical or virtual) linked to the shop, including their current status and identifiers."
    },
    {
      "name": "data_list_delivery_zones",
      "description": "Return all configured delivery zones, including area names, postal codes, and applicable delivery fees or restrictions."
    },
    {
      "name": "data_list_relay_points",
      "description": "List all relay points where customers can pick up their orders, including address, city, and postal code."
    },
    {
      "name": "data_list_discounts",
      "description": "Return all available discounts or promotions, including their names, types (percentage or fixed), values, and conditions."
    },
    {
      "name": "data_list_users",
      "description": "List all users (cashiers, managers, etc.) associated with the shop, including their roles and identifiers."
    },
    {
      "name": "data_list_tables",
      "description": "Retrieve the list of tables configured in the app, used for restaurant mode or table management."
    },
    {
      "name": "data_list_orders",
      "description": "List either : unvalidated orders (called quotes) with creation date between from_date_ISO8601 and to_date_ISO8601 OR validated orders (called orders, invoices) with date of value between from_date_ISO8601 and to_date_ISO8601. You can also filter delivery methods (using filterDeliveryMethod)"
    }
  ]
}